问题：
1. 强类型 弱类型
2. web API
3. HTTP 接收报文 1xx, 2xx, 3xx, 4xx, 5xx 含义
4. RESTFUL API
5. cookie,session，token，如果session存在cookie里，cookie禁用怎么办
6. 表单是如何提交的

解答：
1. 
Js 弱类型，比如var可以用于int也可用于string用于char
Java 强类型，每个变量都必须要有明确的类型，且该变量一旦指定了该数据类型，未经强制转换前就永远是该类型了 

2. 
Web API 是基于HTTP 的编程接口框架，可以参加HTTP发送报文（GET/POST/PUT/DELETE，唯一标识 URL），HTTP 接收报文（各种status code）
其中RESTFUL API 即属于WEB API

3. 1xx - information
   2xx - success
   3xx - 重定向
   4xx - 客户端error
   5xx - 服务端error

4. 
RESTFUL API 是 REST API的一种实现，REST API 是一套前后端分离的标准
RESTFUL 6 大原则 ：1. C/S架构 
                  2. 无状态，http请求本身是无状态的，客户端每次请求都得带上自己的状态信息以便服务端识别
                  3. 统一接口，即资源识别（通过URL标识请求的资源 e.g. ..../country/city/name），请求的动作（http method），响应信息（状态码）
                  4. 一致的数据格式（XML 或 JSON）
                  5. 客户端可缓存
                  6. 按需编码（别管了罗里吧嗦），大致意思是服务端可以返回一些JS代码让客户端执行

5.
5.1 cookie - 一段小型文本数据，由服务端在客户端首次请求时发送给客户端，cookie可以被存在进程里（则浏览器关闭后cookie消失），或硬盘里（浏览器关闭后即使重启浏览器cookie依旧存在，在
过期时间到期后消失），http请求头里会有cookie，把客户端保存的所有cookie发给服务端，同时http的响应头里有set-cookie，为客户端首次请求时服务端发送的set-cookie的内容。
cookie可以保存sessionid，也可以保存用户喜好，用户账号密码等（比如勾选记住我）
如果禁用了cookie，seesion发不到服务端怎么办？ -- 1. URL重写，把sessionid附在url后缀上 2. 表单隐藏字段，服务器自动修改表单，增加一个隐藏字段用于发送sessionid 


5.2 session - 会话id，验证身份的时候用到的，每个客户端与服务端会话都有一个单独session，用于标识是某个用户，客户端保存sessionid在cookie中，服务端可以把sessionid存在内存里，也可以
持久化保存session到file，数据库，memcache，Redis等

5.3 token - session的优化，就是在第一次会话的时候，服务端就生成一个token，这个token可以由用户id（即数据），以及用服务端自己的私钥加密对数据加密后的签名拼接组成，以后每次用户发请求给服务端
服务端只需要验证token（即签名数据来和token中的签名作比较，如果一样就通过验证）

6.
对于get请求，浏览器会讲form表单转换成value1=name1&value2=name2&value3=name3的形式附到URL后缀上发送给服务端
对于post请求，浏览器把form数据封装到http请求的entity body中发给服务端
